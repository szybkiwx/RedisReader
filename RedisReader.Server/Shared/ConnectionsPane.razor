@using RedisReader.Server.Services
@inject IStoreConnections ConnectionStore
@inject IManageRedisConnections ManageRedisConnections
@inject ConnectionStateContainer ConnectionStateContainer

<!-- Sidebar -->
<div class="sidebar">
    <!-- Sidebar Menu -->
    <nav class="mt-2">
        <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
            @foreach (var (guid, name) in _redisConnections)
            {
                var link = $"connections/{guid}";
                var menuId = $"ctxMenu{guid}";
                <ConnectionContextMenu
                    ConnectionId="@guid"
                    MenuId="@menuId"
                    ModalOpened="@ModalOpened"/>
                <ContextMenuTrigger MenuId="@menuId">
                    <li class="nav-item">
                        <NavLink href="@link" class="nav-link" @ondblclick="() => Connect(guid)">
                            <i class="nav-icon fas fa-database"></i>

                            <p>
                                @name
                                <span class="right">
                                    @if (ManageRedisConnections.IsConnected(guid))
                                    {
                                        <i class="fas fa-check-circle" style="color: green"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-times-circle" style="color:#ff0000"></i>
                                    }
                                </span>
                            </p>
                        </NavLink>
                    </li>
                </ContextMenuTrigger>
            }
            <li class="nav-item">
                <a href="" class="nav-link" @onclick="ShowAddForm" @onclick:preventDefault>
                    <i class="nav-icon fas fa-plus"></i>
                    <p>Add connection</p>
                </a>
            </li>


        </ul>
    </nav>
    <!-- /.sidebar-menu -->
</div>


@code {

    [CascadingParameter]
    public IModalService Modal { get; set; }

    private IEnumerable<RedisConnection> _redisConnections;

    public record RedisConnection(Guid Id, string Name);

    protected override void OnInitialized()
    {
        LoadConnections();
    }

    private async Task ModalOpened(IModalReference modal)
    {
        var result = await modal.Result;
        if (!result.Cancelled)
        {
            ReLoadConnections();
        }
    }

    private void ReLoadConnections()
    {
        LoadConnections();
        StateHasChanged();
    }

    private void LoadConnections()
    {
        _redisConnections = ConnectionStore
            .GetConnections()
            .Select(c => new RedisConnection(c.Id, c.DisplayName));
    }

    async Task ShowAddForm()
    {
        var form = Modal.Show<EditConnectionForm>("New connection");
        var result = await form.Result;
        if (!result.Cancelled)
        {
            ReLoadConnections();
        }
    }

    private void Connect(Guid id)
    {
        try
        {
            ManageRedisConnections.Connect(id);
            ConnectionStateContainer.NotifyStateChanged();
        }
        catch (Exception e)
        {
            var parameters = new ModalParameters();
            parameters.Add("Endpoint", ConnectionStore.GetConnection(id).Endpoint);
            parameters.Add("Message", e.Message);
            Modal.Show<CannotConnectModal>("Error connecting to database", parameters); 
        }
    }
    
    



}